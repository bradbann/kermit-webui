This is a WebUI for the management of MCollective.

It is written with Django 1.3 and Python 2.6 (but it works fine with Python 2.4
too).

First of all, you need to install this framework. Here a complete
list of packages required for the webui:
 * Django-1.3-2.1.el5.noarch.rpm 
 * python-httplib2
 * python-simplejson
 * (python-sqlite2 if you use a sqlite database)

One way to get those packages for el5/centos 5 is the KERMIT repository :
http://www.kermit.fr/repo/rpm/

After the installation of the packages you'll need to configure the application.
In the file 'settings.py', Django require some absolute path to locate the
sqlite db file (used for development), images, templates, etc. 

Another thing you may want to change is the Ruby MCollective Rest Server. By
default it is set on the same machine as the webui, for security reasons.
In the file 'settings.py' you need to adjust the line:

RUBY_REST_BASE_URL="http://localhost:4567/mcollective/"

Now you are ready to configure your database (sqlite or what you have configured
in settings.py). To do this run:

python src/webui/manage.py syncdb

from the project root path.

If all works fine you should see messages about the creation of tables and
filling of default data. During this setup (the first time) you need to 
configure the django admin user too (necessary to enter in the admin area).

NOTE: if you have an error "module messages not found" you are probably using
the default el5 Django version (1.1.4). The message module was introduced in
Django 1.2.  So please upgrade it.

At the end of this process you can start your application server and explore the
webui application. To do this, simply run:

python src/webui/manage.py runserver

and then access to the application at:

http://localhost:8000

If you need to enable access from other machines (i.e. you can't use a browser
on localhost) you need to bind the Django server on external network interface
(or use the "all interfaces" wildcard). So, use this command:

python src/webui/manage.py runserver 0.0.0.0:8000

This will start the server bounded to any network and using port 8000 
(you can also change the port, of course)

---

Quick and dirty version :

python src/webui/manage.py syncdb
python src/webui/manage.py runserver 0.0.0.0:8000
